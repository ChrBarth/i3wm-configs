# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

### General settings:{{{
set $mod Mod4
set $term urxvt

# path to the background image
# to set a background image I use ranger and convert the selected
# image to that file:
set $bg ~/.config/i3/bgimage.png

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 12

# Don't focus the window under the mouse
focus_follows_mouse no

font xft:Ubuntu 10
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
###}}}

### Key bindings:{{{
# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec $term

# misc applications:
bindsym Control+Mod1+c exec chromium-browser; workspace $WS3
bindsym Control+Mod1+z exec chromium-browser --incognito; workspace $WS3
bindsym Control+Mod1+f exec firefox; workspace $WS3
bindsym Control+Mod1+b exec qutebrowser 2>/dev/null; workspace $WS3
bindsym Control+Mod1+g exec gvim
bindsym Control+Mod1+v exec vlc; workspace $WS6
bindsym Control+Mod1+m exec mudita24 2>/dev/null; workspace $WS7
bindsym Control+Mod1+n exec pavucontrol
bindsym Control+Mod1+e exec caja 2>/dev/null
bindsym Control+Mod1+d exec cadence; workspace $WS7
bindsym Control+Mod1+t exec gtklick; workspace $WS7
bindsym control+Mod1+o exec i3-msg workspace $WS2; exec $term -title ncmpcpp -e ncmpcpp
bindsym Control+Mod1+r exec urxvt -e ranger
bindsym Control+Mod1+s exec gnome-sudoku; workspace $WS9
bindsym Control+Mod1+u exec $term -e tmux
bindsym Control+Mod1+p exec --no-startup-id urxvt -fn "xft:Terminus:pixelsize=24" -name pyterm -e python3
# simple timer script:
bindsym Control+Mod1+i exec --no-startup-id urxvt -fn "xft:Terminus:pixelsize=60" -name timer -geometry 13x3 -e python3 ~/src/python/timer/timer.py
# help (for now:)
bindsym $mod+F1 exec urxvt -title helpterm -e sh -c "i3-keybinds.py | less"
bindsym $mod+F2 exec urxvt -title helpterm -e sh -c "cat .config/ranger/rc.conf | sed -ne 's/.*map[\t ]*//g p' | less"
bindsym $mod+F3 exec urxvt -title helpterm -e sh -c "cat .bashrc | sed -ne 's/alias //g p' | less"
bindsym $mod+F4 exec urxvt -name flurxvt
bindsym $mod+F5 exec --no-startup-id ~/bin/studiolauncher.sh
bindsym $mod+F6 exec --no-startup-id ~/bin/practicemode.sh on >/dev/null; workspace $WS7
bindsym $mod+F7 exec --no-startup-id ~/bin/practicemode.sh off >/dev/null
bindsym $mod+F8 exec --no-startup-id find ~/Dokumente/Notizen/ -type f -name *.md | rofi -dmenu | xargs -r urxvt -name flurxvt -e vim
bindsym $mod+F9 exec --no-startup-id find ~/src/git/cheatsheets/pdf/ -type f | rofi -dmenu | xargs -r evince
bindsym $mod+F10 exec --no-startup-id ~/bin/monitor_inputs.sh on >/dev/null
bindsym $mod+F11 exec --no-startup-id ~/bin/monitor_inputs.sh off >/dev/null
bindsym Control+Mod1+6 exec --no-startup-id ~/bin/monitor_inputs.sh on >/dev/null; exec notify-send "Inputs active üéöÔ∏è"
bindsym Control+Mod1+7 exec --no-startup-id ~/bin/monitor_inputs.sh off >/dev/null; exec notify-send "Inputs disconnected"
# sysinfo stuff:
bindsym Control+Mod1+1 exec urxvt -name flurxvt -geometry 60x10 -title cpuinfo -e watch cpuinfo.sh
bindsym Control+Mod1+2 exec urxvt -name flurxvt -e ping 192.168.0.1
bindsym Control+Mod1+3 exec urxvt -name flurxvt -e sudo slurm -i enp2s0
# sometimes I need some kind of menu...:
bindsym Control+Mod1+a exec xfce4-appfinder 

# mpd control via mpc:
bindsym XF86AudioPrev exec mpc prev
bindsym XF86AudioNext exec mpc next
bindsym XF86AudioPlay exec mpc toggle
# spotify controls:
# https://gist.github.com/wandernauta/6800547
bindsym Control+XF86AudioPlay exec sp.sh play
bindsym Control+Mod1+XF86AudioPlay exec notify-send "$(sp.sh current)"
bindsym Control+XF86AudioNext exec sp.sh next
bindsym Control+XF86AudioPrev exec sp.sh prev
# from https://askubuntu.com/a/444183:
# if we are using i3blocks, send signal to update volume display:
bindcode 179 exec --no-startup-id amixer -q -D pulse sset Master toggle && pkill -SIGRTMIN+1 -F /tmp/i3blocks.pid
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q -D pulse sset Master 5%- && pkill -SIGRTMIN+1 -F /tmp/i3blocks.pid
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q -D pulse sset Master 5%+ && pkill -SIGRTMIN+1 -F /tmp/i3blocks.pid
# i3bar/conky: no need to kill anything ;)
#bindcode 179 exec --no-startup-id amixer -q -D pulse sset Master toggle 
#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q -D pulse sset Master 5%- 
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q -D pulse sset Master 5%+

# screenshot:
bindsym Print exec "scrot ~/Bilder/screenshots/screenshot_%Y-%m-%d-%k%M%S.png"

# kill focused window
# (I actually like the three-button-version because it keeps me from
# accidentially closing windows...)
bindsym $mod+Shift+q kill

# lock screen
# I wrote a little script that grabs the screen, blurs the image,
# puts an image of a lock on top and uses this as the lockscreen:
bindsym Control+Mod1+l exec lock_screen

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
bindsym $mod+d exec rofi -show-icons -modi run#drun#window -show drun -theme ~/.config/rofi/theme.rasi
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+q layout default
# layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+Control+c move absolute position center

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# scratchpad:
bindsym $mod+Shift+p move scratchpad
bindsym $mod+p scratchpad show

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child
###}}}

### Workspaces:{{{
# workspace names (using Font Awesome Icons):
# workspace 1 is for terminals:
set $WS1 1.ÔÑ†
# workspace 2 is for music players (clementine)
set $WS2 2.‚ô´
# workspace 3 is for web browsing/email
set $WS3 3.Ôâ®
# workspace 4 is for graphic/video editing stuff
set $WS4 4.ÔÄæ
# workspace 5 is for office
set $WS5 5.Ôáù
# workspace 6 is for video players
set $WS6 6.ÔÄà
# workspace 7 is for audio mixers, qjackctl, cadence etc.
set $WS7 7.ÔÇ≠
# workspace 8 is for audio recording/mixing/mastering applications
set $WS8 8.ÔÑ∞
# workspace 9 and 10 are for everything else :)
set $WS9 9.ÔÖº
set $WS10 10.ÔÖº

# assign appplication to a certain workspace:
assign [class="^Clementine$"] ‚Üí $WS2
assign [class="^Spotify$"] ‚Üí $WS2
assign [class="^Chromium-browser$"] ‚Üí $WS3
assign [class="^Firefox$"] ‚Üí $WS3
assign [class="^Thunderbird"] ‚Üí $WS3
assign [class="^qutebrowser$"] ‚Üí $WS3
assign [class="^Gimp.*$"] ‚Üí $WS4
assign [class="^Inkscape$"] ‚Üí $WS4
assign [class="^org.inkscape.Inkscape$"] ‚Üí $WS4
assign [class="^Scribus$"] ‚Üí $WS4
assign [class="^Blender$"] ‚Üí $WS4
assign [class="^kdenlive$"] ‚Üí $WS4
assign [class="^digikam$"] ‚Üí $WS4
assign [class="^libreoffice.*"] ‚Üí $WS5
assign [class="^MuseScore.*"] ‚Üí $WS5
assign [title="(?i)libreoffice|LibreOffice"] ‚Üí $WS5
assign [class="^vlc$"] ‚Üí $WS6
assign [class="^Kaffeine$"] ‚Üí $WS6
assign [class="^Qjackctl$"] ‚Üí $WS7
assign [class="^Gxtuner$"] ‚Üí $WS7
assign [class="^Mudita24$"] ‚Üí $WS7
assign [class="^Gtick$"] ‚Üí $WS7
assign [class="^Gtklick$"] ‚Üí $WS7
assign [class="^Hydrogen$"] ‚Üí $WS8
assign [class="^Ardour*"] ‚Üí $WS8
assign [class="^Audacity$"] ‚Üí $WS8
assign [class="^Audacious$"] ‚Üí $WS8
assign [class="^Cadence$"] ‚Üí $WS7
assign [class="^qsynth$"] ‚Üí $WS7
assign [title="^DrumGizmo*"] ‚Üí $WS7
assign [class="^meterbridge$"] ‚Üí $WS7
assign [class="^qtractor$"] ‚Üí $WS8
assign [class="^Pavucontrol"] ‚Üí $WS7
assign [class="^Catia"] ‚Üí $WS7
assign [class="^Claudia"] ‚Üí $WS9
assign [class="^Carla"] ‚Üí $WS8
assign [class="^Festige.py"] ‚Üí $WS8
assign [class="^Fst"] ‚Üí $WS8
assign [class="^Gnome-sudoku$"] ‚Üí $WS9
assign [title="ncmpcpp"] ‚Üí $WS2
###}}}

### Special window/application settings:{{{
# special application settings (floating etc):
for_window [class="^Qjackctl$"] floating enable
for_window [class="Guitarix"] floating enable
for_window [class="^Mudita24$"] floating enable
for_window [class="^Pavucontrol"] floating enable
for_window [class="^Gtick$"] floating enable
for_window [class="qsynth"] floating enable
for_window [class="^Cadence$"] floating enable
for_window [class="guitarix"] floating enable
for_window [class="Audacious"] floating enable
for_window [class="Gxtuner"] floating enable
for_window [class="^Conky$"] floating enable
for_window [class="^XCalc$"] floating enable
for_window [title="^pYahtzee$"] floating enable
for_window [instance="pyterm"] floating enable
for_window [instance="pyterm"] move position center
for_window [instance="flurxvt"] floating enable
for_window [title="helpterm"] floating enable
for_window [title="helpterm"] move position center
for_window [title="^DrumGizmo*"] floating enable
for_window [class="Xfce4-appfinder"] floating enable
for_window [instance="timer"] floating enable
for_window [class="Fst"] floating enable
for_window [class="feh"] floating enable
for_window [class="Gzdoom"] floating enable
for_window [class="meterbridge"] move position 20 40
for_window [class="Gtklick"] move position 20 300
for_window [instance="timer"] move position 20 740
for_window [class="^Gnome-sudoku$"] floating enable
for_window [class="^Gnome-sudoku$"] move position center
###}}}

### workspace stuff:{{{
# switch to workspace
# somehow Control+F[1-10] is what I'm used to...
bindsym $mod+1 workspace $WS1
bindsym Control+F1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym Control+F2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym Control+F3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym Control+F4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym Control+F5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym Control+F6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym Control+F7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym Control+F8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym Control+F9 workspace $WS9
bindsym $mod+0 workspace $WS10
bindsym Control+F10 workspace $WS10
# easily switch between two workspaces:
bindsym $mod+Tab workspace back_and_forth

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9
bindsym $mod+Shift+0 move container to workspace $WS10
###}}}

### misc stuff:{{{
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window‚Äôs width.
    # Pressing right will grow the window‚Äôs width.
    # Pressing up will shrink the window‚Äôs height.
    # Pressing down will grow the window‚Äôs height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# at the moment I'm playing around with both i3status and conky:
bar {
#status_command $HOME/bin/conky-i3bar
# this crashes i3blocks when an application goes fullscreen:
#status_command "i3blocks & pid=$!; echo $pid > /tmp/i3blocks.pid; wait $pid"
# if we put all of the above line in a script, it works:
status_command "$HOME/bin/start_i3blocks.sh"
#       status_command i3status
#       tray_output primary
position top
font xft: Ubuntu, FontAwesome 11
}

# colors - still ugly, but not very high on my todo-list at the moment:
client.focused #101010 #202020 #FFFFFF #FFFFFF
client.focused_inactive #101010 #050505 #444444 #FFFFFF
client.unfocused #080808 #020202 #444444 #FFFFFF
client.urgent #C20000 #C20000 #FFFFFF #FFFFFF
###}}}

### autostart:{{{

# background image:
# exec_always: command gets executed everytime the config is reloaded,
# exec only executes once per session (you have to log out for
# changes to be effective)
exec_always --no-startup-id feh --bg-scale $bg

# screensaver/power options:
# dpms: standby after 30 min, off after 1h, screensaver off
exec --no-startup-id xset +dpms dpms 1800 3600 3600 s off

# turn on Num Lock key:
# (sudo apt install numlockx)
exec --no-startup-id numlockx

# remove caps lock
#exec --no-startup-id xmodmap ~/.xmodmaprc
exec_always --no-startup-id setxkbmap de deadacute caps:escape

# load .Xresources:
exec_always --no-startup-id xrdb ~/.Xresources

# start policykit:
# (https://askubuntu.com/questions/799125/authentication-agent-and-i3wm)
exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &

# start some more stuff:
exec --no-startup-id ~/bin/autostart.sh

# start one terminal with tmux inside:
#exec urxvt -e tmux &
