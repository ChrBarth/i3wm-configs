# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# path to the background image
# to set a background image I use ranger and convert the selected
# image to that file:
set $bg ~/.config/i3/bgimage.png

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 10

font xft:Terminus, FontAwesome 10
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec urxvt

# misc applications:
bindsym Control+Mod1+c exec chromium-browser
bindsym Control+Mod1+g exec gvim
bindsym Control+Mod1+v exec vlc
bindsym Control+Mod1+m exec clementine
bindsym Control+Mod1+e exec caja

# mocp control:
# Multimediakeys without Contol are already used by clementine
bindsym Control+XF86AudioPrev exec mocp -r
bindsym Control+XF86AudioNext exec mocp -f
bindsym Control+XF86AudioPlay exec mocp -G

# screenshot:
bindsym Print exec "scrot ~/Bilder/screenshots/screenshot_%Y-%m-%d-%k%M%S.png"

# kill focused window
bindsym $mod+Shift+q kill

# lock screen
bindsym Control+Mod1+l exec lock_screen

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s ndsym $mod+Up focus up
# layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# workspace names (using Font Awesome Icons):
# workspace 1 is for terminals:
set $WS1 1.
# workspace 2 is for music players (clementine)
set $WS2 2.
# workspace 3 is for web browsing/email
set $WS3 3.
# workspace 4 is for graphic/video editing stuff
set $WS4 4.
# workspace 5 is for office
set $WS5 5.
# workspace 6 is for video players
set $WS6 6.
# workspace 7 is for audio mixers, qjackctl, cadence etc.
set $WS7 7.
# workspace 8 is for audio recording/mixing/mastering applications
set $WS8 8.
# workspace 9 and 10 are for everything else :)
set $WS9 9.
set $WS10 10.

# assign appplication to a certain workspace:
assign [class="^Clementine$"] → $WS2
assign [class="^Spotify$"] → $WS2
assign [class="^Chromium-browser$"] → $WS3
assign [class="^Firefox$"] → $WS3
assign [class="^Thunderbird"] → $WS3
assign [class="^Gimp$"] → $WS4
assign [class="^Inkscape$"] → $WS4
assign [class="^Blender$"] → $WS4
assign [class="^kdenlive$"] → $WS4
assign [class="^libreoffice-*"] → $WS5
assign [class="^vlc$"] → $WS6
assign [class="^Kaffeine$"] → $WS6
assign [class="^Qjackctl$"] → $WS7
assign [class="^Mudita24$"] → $WS7
assign [class="^Gtick$"] → $WS7
assign [class="^Hydrogen$"] → $WS8
assign [class="^Ardour*"] → $WS8
assign [class="^Audacity$"] → $WS8
assign [class="^Cadence.py$"] → $WS7
assign [class="^Qtractor$"] → $WS8

# special application settings (floating etc):
for_window [class="^Qjackctl$"] floating enable
for_window [class="^Mudita24$"] floating enable
for_window [class="^Gtick$"] floating enable

# switch to workspace
# somehow Control+F[1-10] is what I'm use to...
bindsym $mod+1 workspace $WS1
bindsym Control+F1 workspace $WS1
bindsym $mod+2 workspace $WS2
bindsym Control+F2 workspace $WS2
bindsym $mod+3 workspace $WS3
bindsym Control+F3 workspace $WS3
bindsym $mod+4 workspace $WS4
bindsym Control+F4 workspace $WS4
bindsym $mod+5 workspace $WS5
bindsym Control+F5 workspace $WS5
bindsym $mod+6 workspace $WS6
bindsym Control+F6 workspace $WS6
bindsym $mod+7 workspace $WS7
bindsym Control+F7 workspace $WS7
bindsym $mod+8 workspace $WS8
bindsym Control+F8 workspace $WS8
bindsym $mod+9 workspace $WS9
bindsym Control+F9 workspace $WS9
bindsym $mod+0 workspace $WS10
bindsym Control+F10 workspace $WS10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $WS1
bindsym $mod+Shift+2 move container to workspace $WS2
bindsym $mod+Shift+3 move container to workspace $WS3
bindsym $mod+Shift+4 move container to workspace $WS4
bindsym $mod+Shift+5 move container to workspace $WS5
bindsym $mod+Shift+6 move container to workspace $WS6
bindsym $mod+Shift+7 move container to workspace $WS7
bindsym $mod+Shift+8 move container to workspace $WS8
bindsym $mod+Shift+9 move container to workspace $WS9
bindsym $mod+Shift+0 move container to workspace $WS10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym hresize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# at the moment I'm playing around with both i3status and conky:
bar {
	status_command $HOME/bin/conky-i3bar
#       status_command i3status
#       tray_output primary
	position top
}

# colors - still ugly, but not very high on my todo-list at the moment:
client.focused #101010 #202020 #FFFFFF #FFFFFF
client.focused_inactive #101010 #050505 #444444 #FFFFFF
client.unfocused #080808 #02020220202 #444444 #FFFFFF
client.urgent #C20000 #C20000 #FFFFFF #FFFFFF

# start PulseAudio:
exec --no-startup-id pulseaudio -D

# background image:
# exec_always: command gets executed everytime the config is reloaded,
# exec only executes once per session (you have to log out for
# changes to be effective)
exec_always --no-startup-id feh --bg-scale $bg

# auto mount external drives with udiskie:
# -A: disable automount
# -N: disable notify popups
# -s: smart tray (only shows when there is something to mount/unmount
exec --no-startup-id udiskie -ANs

# redshift:
# my eyes don't hurt anymore when I'm browsing the web late at night :D
exec --no-startup-id redshift

# turn on Num Lock key:
# (sudo apt install numlockx)
exec --no-startup-id numlockx

# last.fm scrobbler for moc:
# https://github.com/fluxid/mocp-scrobbler
exec mocp-scrobbler.py -d

