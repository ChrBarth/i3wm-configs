#!/bin/bash
# creates blurred screenshot of current desktop and uses it as image for i3lock
# new: use ffmpeg for blurring (much faster than convert!)
# new: use ffmpeg also for overlaying lock_circle.png over lockscreen.png:
#  [0] boxblur=5:5 [blur] --> takes input [0] (lockscreen.png) and blurs it, sends the blurred image to the output named "[blur]"
#  [blur][1] overlay=(W-w)/2:(H-h)/2 --> takes what comes out of the "[blur]"-output (=the blurred screenshot) and puts
#   [1] (=lock_circle.png) on top of it
#  (W-w)/2 = (Width of lockscreen.png - Width of lock_circle.png) / 2 (=> X-Offset)
#  (H-h)/2 = Same with height, so the lock-image is centered
# see: https://stackoverflow.com/a/10920872

# make screenshot of current desktop, put the lock image on top and invoke i3lock

revert () {
    xset -dpms
    }
trap revert HUP INT TERM
# ImageMagick version with just resizing (creates blocky image):
import -window root -resize 20% - | convert - -scale 500% - | convert - ~/.config/i3/lock_circle.png -gravity center -composite ~/lockscreen.png

# ffmpeg version with blurring:
#import -window root ~/desktop.png && \
#ffmpeg -y -v 0 -hide_banner -i ~/desktop.png -i ~/.config/i3/lock_circle.png -filter_complex "[0] boxblur=5:5 [blur]; [blur][1] overlay=(W-w)/2:(H-h)/2" ~/lockscreen.png && \
#rm ~/desktop.png && \

# set screen blanking time a little lower since we're ovbiously not using it:
xset +dpms dpms 120 600 600
i3lock -n -i ~/lockscreen.png
rm ~/lockscreen.png
revert
